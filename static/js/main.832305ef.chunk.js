(this["webpackJsonpmarkdown-previewer"]=this["webpackJsonpmarkdown-previewer"]||[]).push([[0],{22:function(e,n,t){},28:function(e,n,t){"use strict";t.r(n);var r=t(1),a=t.n(r),i=t(10),c=t.n(i),o=t(15),d=t(33),s=(t(22),t(2));var m=function(){var e=Object(r.useState)(""),n=Object(o.a)(e,2),t=n[0],a=n[1];return Object(r.useEffect)((function(){a(p)}),[]),Object(s.jsx)("div",{className:"App",children:Object(s.jsxs)("main",{className:"flex-row centered",id:"main",children:[Object(s.jsx)("textarea",{id:"editor",onChange:function(e){return a(e.target.value)},children:p}),Object(s.jsx)("div",{id:"preview",children:Object(s.jsx)(d.a,{children:t})})]})})},p='\n# This is a FreeCodeCamp certification project\n\n## Markdown editor\n\n[FreeCodeCamp](https://freecodecamp.org)\n\n![freecodecamp](https://pbs.twimg.com/profile_images/1276770212927410176/qTgTIejk_400x400.jpg)\n\nWe can define a list\n\n- first element\n- second element\n- third element\n\n> Imagine here is a nice quote.\n\nHere is some **code**\n\n```\nimport ReactMarkdown from "react-markdown";\nimport { useState, useEffect, ChangeEvent } from "react";\nimport "./App.css";\n\nfunction App() {\n  const [markdown, setMarkdown] = useState<string>("");\n\n  useEffect(() => {\n\n  }, []);\n\n  return (\n    <div className="App">\n      <main className="flex-row centered" id="main">\n        <textarea\n          id="editor"\n          onChange={(e: ChangeEvent<HTMLTextAreaElement>) =>\n            setMarkdown(e.target.value)\n          }\n        />\n        <div id="preview">\n          <ReactMarkdown children={markdown} />\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n```\n\n``import defaultMarkdown from \'./defaultMarkdown.md\'``\n\n';c.a.render(Object(s.jsx)(a.a.StrictMode,{children:Object(s.jsx)(m,{})}),document.getElementById("root"))}},[[28,1,2]]]);
//# sourceMappingURL=main.832305ef.chunk.js.map